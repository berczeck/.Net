<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <targets>

      <target xsi:type="File" name="LogTraceTxt" archiveEvery="Hour" concurrentWrites="true" layout="[Datos Generales]${newline}
Identificador = ${event-context:Identificador}${newline}
Fecha y Hora = ${longdate}${newline}
Título = ${message}${newline}
Usuario = ${event-context:item=Usuario}${newline}
Ip = ${event-context:item=Ip}${newline}
Accion = ${event-context:item=Accion}${newline}
Duracion(seg) = ${event-context:item=Duracion}${newline}
Fecha Inicio = ${event-context:item=FechaInicio}${newline}
Fecha Fin = ${event-context:item=FechaFin}${newline}${newline}
[ProcessInformation]${newline}
ProcessId = ${processid}${newline}
ProcessName = ${processname}${newline}
ProcessAccountName = ${windows-identity}${newline}
ThreadId = ${threadid}${newline}
ThreadAccountName = ${threadname}${newline}${newline}
[Request]${newline}
${event-context:item=Request}${newline}${newline}
[Response]${newline}
${event-context:item=Response}${newline}
-------------------------------------------------------------------------------------------------------${newline}"
              fileName="${basedir}/logs/${shortdate}.TrazaServicio.txt"/>
    
      <target xsi:type="File" name="LogErrorTxt"  archiveEvery="Hour" concurrentWrites="true" layout="[Datos Generales]${newline}
Fecha y Hora = ${longdate}${newline}
Título = ${message}${newline}${newline}
[ProcessInformation]${newline}
ProcessId = ${processid}${newline}
ProcessName = ${processname}${newline}
ProcessAccountName = ${windows-identity}${newline}
ThreadId = ${threadid}${newline}
ThreadAccountName = ${threadname}${newline}${newline}
[Exception]${newline}
${event-context:item=DatosError}${newline}
-------------------------------------------------------------------------------------------------------${newline}"
              fileName="${basedir}/logs/${shortdate}.ErrorServicio.txt" />

    <target xsi:type="File" name="LogInfoTxt" archiveEvery="Hour" concurrentWrites="true" 
            layout="${event-context:item=Tipo}|${event-context:item=Identificador}|${processid}|${processname}|${windows-identity}|${longdate}|${event-context:item=Modulo}|${event-context:item=Origen}|${event-context:item=Ip}|${message}${newline}"
            fileName="${basedir}/logs/${shortdate}.InfoServicio.txt"/>

    <target xsi:type="File" name="LogWarnTxt" archiveEvery="Hour" concurrentWrites="true"
            layout="${event-context:item=Tipo}|${event-context:item=Identificador}|${processid}|${processname}|${windows-identity}|${longdate}|${event-context:item=Modulo}|${event-context:item=Origen}|${event-context:item=Ip}|${message}${newline}"
            fileName="${basedir}/logs/${shortdate}.WarningServicio.txt"/>

    <target xsi:type="File" name="LogDebugTxt" archiveEvery="Hour" concurrentWrites="true"
            layout="${processid}|${processname}|${windows-identity}|${longdate}|${event-context:item=Modulo}|${event-context:item=Origen}|${message}${newline}"
            fileName="${basedir}/logs/${shortdate}.DebugServicio.txt"/>

    <target xsi:type="File" name="LogFatalTxt" archiveEvery="Hour" concurrentWrites="true"
            layout="${event-context:item=Tipo}|${event-context:item=Identificador}|${processid}|${processname}|${windows-identity}|${longdate}|${event-context:item=Modulo}|${event-context:item=Origen}|${event-context:item=Ip}|${message}${newline}"
            fileName="${basedir}/logs/${shortdate}.FatalServicio.txt"/>
    
  </targets>

  <rules>
   
    <logger name="*" minlevel="Error" writeTo="LogErrorTxt" >
      <filters>
        <when condition="level!=LogLevel.Error" action="Ignore"/>
      </filters>
    </logger>
    <logger name="*" minlevel="Trace" writeTo="LogTraceTxt" >
      <filters>
        <when condition="level!=LogLevel.Trace" action="Ignore"/>
      </filters>
    </logger>
    <logger name="*" minlevel="Info" writeTo="LogInfoTxt" >
      <filters>
        <when condition="level!=LogLevel.Info" action="Ignore"/>
      </filters>
    </logger>
    <logger name="*" minlevel="Warn" writeTo="LogWarnTxt" >
      <filters>
        <when condition="level!=LogLevel.Warn" action="Ignore"/>
      </filters>
    </logger>
    <logger name="*" minlevel="Debug" writeTo="LogDebugTxt" >
      <filters>
        <when condition="level!=LogLevel.Debug" action="Ignore"/>
      </filters>
    </logger>
    <logger name="*" minlevel="Fatal" writeTo="LogFatalTxt" >
      <filters>
        <when condition="level!=LogLevel.Fatal" action="Ignore"/>
      </filters>
    </logger>

  </rules>
</nlog>